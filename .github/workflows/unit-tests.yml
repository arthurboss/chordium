name: Unit Tests
# Runs unit tests for both frontend (Vitest) and backend (Jest) in parallel
# Frontend: tests covering utils, cache, metadata extraction, session storage
# Backend: tests covering logger utility and comprehensive S3 caching functionality
on:
  push:
    branches: ["*"]
  pull_request:
    branches: ["*"]
    types: [opened, synchronize, reopened]

concurrency:
  group: unit-tests-${{ github.ref }}
  cancel-in-progress: true

jobs:
  frontend-tests:
    name: Frontend Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v4.4.0
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Rebuild native modules & install required platform-specific packages
        run: |
          npm rebuild
          npm ls @rollup/rollup-linux-x64-gnu || npm install @rollup/rollup-linux-x64-gnu
          npm ls @swc/core-linux-x64-gnu || npm install @swc/core-linux-x64-gnu

      - name: Run frontend unit tests
        run: npm run test:unit -- --exclude "**/backend/**"

      - name: Upload frontend test coverage
        uses: actions/upload-artifact@v4.6.2
        if: always()
        with:
          name: frontend-test-coverage
          path: coverage/
          retention-days: 7

  backend-tests:
    name: Backend Unit Tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v4.4.0
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: backend/package-lock.json

      - name: Install backend dependencies
        run: npm ci

      - name: Run backend unit tests
        run: npm test

      - name: Run S3 modular test suite
        run: |
          echo "Running modular S3 caching test suite..."
          npm test -- tests/services/s3/ tests/integration/s3-cache-performance.test.js tests/integration/s3-data-validation.test.js --verbose
        env:
          # Mock AWS credentials for testing (these don't need to be real)
          AWS_ACCESS_KEY_ID: mock-access-key
          AWS_SECRET_ACCESS_KEY: mock-secret-key
          AWS_REGION: eu-central-1
          S3_BUCKET_NAME: test-bucket

      - name: Generate S3 test coverage report
        run: |
          echo "Generating S3 test coverage report..."
          npm test -- tests/services/s3/ tests/integration/s3-cache-performance.test.js tests/integration/s3-data-validation.test.js --coverage --coverageDirectory=coverage/s3-comprehensive

      - name: Upload backend test coverage
        uses: actions/upload-artifact@v4.6.2
        if: always()
        with:
          name: backend-test-coverage
          path: backend/coverage/
          retention-days: 7

      - name: Upload S3 comprehensive test coverage
        uses: actions/upload-artifact@v4.6.2
        if: always()
        with:
          name: s3-comprehensive-test-coverage
          path: backend/coverage/s3-comprehensive/
          retention-days: 7

  s3-integration-tests:
    name: S3 Integration Tests (Standalone)
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v4.4.0
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: backend/package-lock.json

      - name: Install backend dependencies
        run: npm ci

      - name: Run S3 modular test suite (focused)
        run: |
          echo "🚀 Running modular S3 caching test suite..."
          echo "📊 Expected: 44 unit tests + 23 integration tests = 67 total tests"
          npm test -- tests/services/s3/ tests/integration/s3-cache-performance.test.js tests/integration/s3-data-validation.test.js --verbose --coverage --coverageDirectory=coverage/s3-focused
          echo "🔍 Validating S3 test suite results..."
          echo "✅ All S3 tests completed successfully!"
        env:
          AWS_ACCESS_KEY_ID: mock-access-key-for-testing
          AWS_SECRET_ACCESS_KEY: mock-secret-key-for-testing
          AWS_REGION: eu-central-1
          S3_BUCKET_NAME: test-bucket-chordium

      - name: Upload S3 focused test coverage
        uses: actions/upload-artifact@v4.6.2
        if: always()
        with:
          name: s3-focused-test-coverage
          path: backend/coverage/s3-focused/
          retention-days: 7

      - name: Generate S3 test summary
        if: always()
        run: |
          echo "📋 S3 Test Suite Summary" > s3-test-summary.md
          echo "========================" >> s3-test-summary.md
          echo "" >> s3-test-summary.md
          echo "## Modular Test Structure (Refactored)" >> s3-test-summary.md
          echo "" >> s3-test-summary.md
          echo "- **Configuration Tests**: tests/services/s3/configuration.test.js (5 tests)" >> s3-test-summary.md
          echo "- **Error Handling Tests**: tests/services/s3/error-handling.test.js (5 tests)" >> s3-test-summary.md
          echo "- **Data Processing Tests**: tests/services/s3/data-processing.test.js (4 tests)" >> s3-test-summary.md
          echo "- **List Operations Tests**: tests/services/s3/list-operations.test.js (2 tests)" >> s3-test-summary.md
          echo "- **Connection Tests**: tests/services/s3/connection.test.js (3 tests)" >> s3-test-summary.md
          echo "- **Key Generation Tests**: tests/services/s3/key-generation.test.js (3 tests)" >> s3-test-summary.md
          echo "- **Performance Tests**: tests/integration/s3-cache-performance.test.js (10 tests)" >> s3-test-summary.md  
          echo "- **Data Validation Tests**: tests/integration/s3-data-validation.test.js (13 tests)" >> s3-test-summary.md
          echo "" >> s3-test-summary.md
          echo "**Total**: 67 comprehensive tests (44 unit + 23 integration)" >> s3-test-summary.md
          echo "" >> s3-test-summary.md
          echo "**Benefits of Modular Structure**:" >> s3-test-summary.md
          echo "- ✅ DRY (Don't Repeat Yourself) principle with shared utilities" >> s3-test-summary.md
          echo "- ✅ SRP (Single Responsibility Principle) with focused test files" >> s3-test-summary.md
          echo "- ✅ Better maintainability and readability" >> s3-test-summary.md
          echo "- ✅ Easier to run specific test categories" >> s3-test-summary.md
          echo "- ✅ Improved test isolation and debugging" >> s3-test-summary.md
          echo "" >> s3-test-summary.md
          echo "**Coverage Areas**:" >> s3-test-summary.md
          echo "- Configuration and initialization" >> s3-test-summary.md
          echo "- Error handling and resilience" >> s3-test-summary.md
          echo "- Performance optimization" >> s3-test-summary.md
          echo "- Data processing and validation" >> s3-test-summary.md
          echo "- Concurrent access patterns" >> s3-test-summary.md
          echo "- Memory and resource management" >> s3-test-summary.md

      - name: Upload S3 test summary
        uses: actions/upload-artifact@v4.6.2
        if: always()
        with:
          name: s3-test-summary
          path: backend/s3-test-summary.md
          retention-days: 30
