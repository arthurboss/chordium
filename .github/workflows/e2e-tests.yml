name: E2E Tests
on:
  push:
    branches: ['*']
  pull_request:
    branches: ['*']
    types: [opened, synchronize, reopened, edited]

concurrency:
  group: e2e-${{ github.ref }}
  cancel-in-progress: true

jobs:
  e2e:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Cache Cypress binary
        uses: actions/cache@v3
        with:
          path: ~/.cache/Cypress
          key: cypress-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            cypress-${{ runner.os }}-

      - name: Install dependencies
        run: npm ci

      - name: Check for @rollup/rollup-linux-x64-gnu
        run: |
          npm ls @rollup/rollup-linux-x64-gnu || npm install @rollup/rollup-linux-x64-gnu
      
      - name: Cypress run
        uses: cypress-io/github-action@v6
        with:
          start: npm run dev
          wait-on: 'http://localhost:8080'
          wait-on-timeout: 120
          browser: chrome
          config-file: cypress.config.cjs
          record: false
          install: false
        env:
          NODE_OPTIONS: "--experimental-vm-modules"
      
      - name: Upload screenshots on failure
        uses: actions/upload-artifact@v4.6.2
        if: failure()
        with:
          name: cypress-screenshots
          path: cypress/screenshots
          
      - name: Upload videos
        uses: actions/upload-artifact@v4.6.2
        if: always()
        with:
          name: cypress-videos
          path: cypress/videos

  visual-testing:
    runs-on: ubuntu-latest
    needs: e2e
    if: github.event_name == 'pull_request' && failure()
    permissions:
      contents: write
      pull-requests: write
      actions: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Check if cypress-screenshots artifact exists
        id: check-artifact
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const artifacts = await github.rest.actions.listWorkflowRunArtifacts({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: context.runId
            });
            return artifacts.data.artifacts.some(artifact => artifact.name === 'cypress-screenshots');

      - name: Download test artifacts
        if: steps.check-artifact.outputs.result == 'true'
        uses: actions/download-artifact@v4.3.0
        with:
          name: cypress-screenshots
          path: cypress/screenshots