name: E2E Tests (Non-Cache, Non-Scraping)
on:
  push:
    branches: ['*']
  pull_request:
    branches: ['*']
    types: [opened, synchronize, reopened]

concurrency:
  group: e2e-non-cache-${{ github.ref }}
  cancel-in-progress: true

jobs:
  e2e:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v4.4.0
        with:
          node-version: '20'
          cache: 'npm'

      - name: Cache Cypress binary
        uses: actions/cache@v3
        with:
          path: ~/.cache/Cypress
          key: cypress-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            cypress-${{ runner.os }}-

      - name: Install dependencies
        run: npm ci

      - name: Rebuild native modules & install required platform-specific packages
        run: |
          npm rebuild
          npm ls @rollup/rollup-linux-x64-gnu || npm install @rollup/rollup-linux-x64-gnu
          npm ls @swc/core-linux-x64-gnu || npm install @swc/core-linux-x64-gnu
      
      - name: Cypress run (excluding cache tests and scraping-dependent tests)
        uses: cypress-io/github-action@v6
        with:
          start: npm run dev
          wait-on: 'http://localhost:8080'
          wait-on-timeout: 120
          browser: chrome
          config-file: cypress.config.cjs
          record: false
          install: false
          spec: 'cypress/e2e/browser-navigation.cy.ts,cypress/e2e/home.cy.ts,cypress/e2e/keyboard-navigation.cy.ts,cypress/e2e/lazy-loading.cy.ts,cypress/e2e/song-card-keyboard.cy.ts,cypress/e2e/song-card.cy.ts,cypress/e2e/tab-navigation.cy.ts,cypress/e2e/theme.cy.ts,cypress/e2e/artist-search/**/*.cy.ts'
        env:
          NODE_OPTIONS: "--experimental-vm-modules"
      
      - name: Upload screenshots on failure
        uses: actions/upload-artifact@v4.6.2
        if: failure()
        with:
          name: non-cache-cypress-screenshots
          path: cypress/screenshots
          
      - name: Upload videos
        uses: actions/upload-artifact@v4.6.2
        if: always()
        with:
          name: non-cache-cypress-videos
          path: cypress/videos

  visual-testing:
    runs-on: ubuntu-latest
    needs: e2e
    if: github.event_name == 'pull_request' && failure()
    permissions:
      contents: write
      pull-requests: write
      actions: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Check if non-cache-cypress-screenshots artifact exists
        id: check-artifact
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const artifacts = await github.rest.actions.listWorkflowRunArtifacts({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: context.runId
            });
            return artifacts.data.artifacts.some(artifact => artifact.name === 'non-cache-cypress-screenshots');

      - name: Download test artifacts
        if: steps.check-artifact.outputs.result == 'true'
        uses: actions/download-artifact@v4.3.0
        with:
          name: non-cache-cypress-screenshots
          path: cypress/screenshots
          
      - name: Comment test failures on PR
        if: steps.check-artifact.outputs.result == 'true'
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const path = require('path');
            
            const screenshotDir = 'cypress/screenshots';
            let comment = '## ðŸ§ª E2E Test Failures (Non-Cache, Non-Scraping)\n\n';
            
            if (fs.existsSync(screenshotDir)) {
              const files = fs.readdirSync(screenshotDir);
              if (files.length > 0) {
                comment += 'Non-cache, non-scraping E2E tests failed. Screenshots have been uploaded as artifacts.\n\n';
                comment += '**Failed tests:**\n';
                files.forEach(file => {
                  if (!file.includes('cache') && !file.includes('song-search')) {
                    comment += `- ${file}\n`;
                  }
                });
                comment += '\nðŸ’¡ **Tip:** These tests cover general application functionality excluding cache-specific features and scraping-dependent tests.\n';
              } else {
                comment += 'E2E tests failed but no screenshots were captured.\n';
              }
            } else {
              comment += 'E2E tests failed but no screenshot directory found.\n';
            }
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });